<!DOCTYPE html>
<html lang="en" class="<%= typeof darkMode !== 'undefined' && darkMode ? 'dark-mode' : '' %>">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= typeof title !== 'undefined' ? title : 'Revelate Operations | Data-Driven SaaS Consulting' %></title>
    <meta name="description" content="<%= typeof metaDescription !== 'undefined' ? metaDescription : 'Revelate Operations helps businesses drive revenue growth through data and analysis, providing the technology and processes to transform raw information into actionable insights.' %>">
    
    <!-- Favicon -->
    <link rel="icon" href="/assets/images/favicon.ico">
    <link rel="apple-touch-icon" href="/assets/images/apple-touch-icon.png">
    
    <!-- Meta tags for SEO -->
    <meta property="og:title" content="<%= typeof title !== 'undefined' ? title : 'Revelate Operations | Data-Driven SaaS Consulting' %>">
    <meta property="og:description" content="<%= typeof metaDescription !== 'undefined' ? metaDescription : 'Revelate Operations helps businesses drive revenue growth through data and analysis, providing the technology and processes to transform raw information into actionable insights.' %>">
    <meta property="og:type" content="website">
    <meta property="og:url" content="<%= typeof currentUrl !== 'undefined' ? currentUrl : 'https://revelateoperations.com' %>">
    <meta property="og:image" content="<%= typeof ogImage !== 'undefined' ? ogImage : 'https://revelateoperations.com/assets/images/og-image.jpg' %>">
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="<%= typeof title !== 'undefined' ? title : 'Revelate Operations | Data-Driven SaaS Consulting' %>">
    <meta name="twitter:description" content="<%= typeof metaDescription !== 'undefined' ? metaDescription : 'Revelate Operations helps businesses drive revenue growth through data and analysis, providing the technology and processes to transform raw information into actionable insights.' %>">
    <meta name="twitter:image" content="<%= typeof ogImage !== 'undefined' ? ogImage : 'https://revelateoperations.com/assets/images/og-image.jpg' %>">
    
    <!-- Stylesheets -->
    <link rel="stylesheet" href="/assets/css/main.css">
    <% if (typeof pageStylesheet !== 'undefined') { %>
        <link rel="stylesheet" href="/assets/css/<%= pageStylesheet %>.css">
    <% } %>
    
    <!-- Dark Mode Toggle - Include a light and dark theme stylesheet -->
    <link rel="stylesheet" href="/assets/css/light-theme.css" id="light-theme">
    <link rel="stylesheet" href="/assets/css/dark-theme.css" id="dark-theme" disabled>
    
    <!-- Inline critical CSS for faster page load -->
    <style>
        /* Critical CSS goes here */
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #fff;
            transition: background-color 0.3s ease;
        }
        
        /* Dark mode */
        body.dark-mode {
            color: #f0f0f0;
            background-color: #121212;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Hide content until styles are loaded */
        .content-wrapper {
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .content-wrapper.loaded {
            opacity: 1;
        }
    </style>
    
    <%- (typeof styles !== 'undefined' ? styles : '') %>
</head>
<body class="<%= typeof bodyClass !== 'undefined' ? bodyClass : '' %> <%= typeof darkMode !== 'undefined' && darkMode ? 'dark-mode' : '' %>">
    <!-- Preloader -->
    <div id="preloader">
        <div class="spinner"></div>
    </div>
    
    <!-- Header -->
    <%- include('../partials/header') %>
    
    <!-- Main Content -->
    <main class="content-wrapper">
        <%- body %>
    </main>
    
    <!-- Footer -->
    <%- include('../partials/footer') %>
    
    <!-- Dark Mode Toggle Button -->
    <button id="dark-mode-toggle" aria-label="Toggle dark mode">
        <span class="light-icon">‚òÄÔ∏è</span>
        <span class="dark-icon">üåô</span>
    </button>
    
    <!-- Scripts -->
    <script src="/assets/js/main.js"></script>
    <% if (typeof pageScript !== 'undefined') { %>
        <script src="/assets/js/<%= pageScript %>.js"></script>
    <% } %>
    
    <!-- Dark Mode Script -->
    <script>
        // Dark mode toggle functionality
        (function() {
            const toggle = document.getElementById('dark-mode-toggle');
            const htmlElement = document.documentElement;
            const storedTheme = localStorage.getItem('theme');
            
            // Check if user has a preference saved
            if(storedTheme) {
                htmlElement.classList.toggle('dark-mode', storedTheme === 'dark');
                document.body.classList.toggle('dark-mode', storedTheme === 'dark');
                
                // Toggle the stylesheets
                document.getElementById('light-theme').disabled = storedTheme === 'dark';
                document.getElementById('dark-theme').disabled = storedTheme === 'light';
            } else {
                // Check if user prefers dark mode at OS level
                const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
                htmlElement.classList.toggle('dark-mode', prefersDarkMode);
                document.body.classList.toggle('dark-mode', prefersDarkMode);
                
                // Toggle the stylesheets
                document.getElementById('light-theme').disabled = prefersDarkMode;
                document.getElementById('dark-theme').disabled = !prefersDarkMode;
                
                // Save the preference
                localStorage.setItem('theme', prefersDarkMode ? 'dark' : 'light');
            }
            
            // Handle toggle click
            toggle.addEventListener('click', () => {
                const isDarkMode = htmlElement.classList.toggle('dark-mode');
                document.body.classList.toggle('dark-mode', isDarkMode);
                
                // Toggle the stylesheets
                document.getElementById('light-theme').disabled = isDarkMode;
                document.getElementById('dark-theme').disabled = !isDarkMode;
                
                // Save the preference
                localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
                
                // Dispatch a custom event so other components can react
                document.dispatchEvent(new CustomEvent('themeChanged', { detail: { darkMode: isDarkMode } }));
            });
            
            // Show content once everything is loaded
            window.addEventListener('load', () => {
                document.querySelector('.content-wrapper').classList.add('loaded');
                document.getElementById('preloader').style.display = 'none';
            });
        })();
    </script>
    
    <%- (typeof scripts !== 'undefined' ? scripts : '') %>
</body>
</html>
